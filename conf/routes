# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index

GET     /search                     controllers.Application.search(query: String)

GET		/aktuell					controllers.Application.recent
GET		/top						controllers.Application.top
GET		/alle						controllers.Application.all
GET 	/media						controllers.Application.media
GET		/tag/:tag					controllers.Application.tag(tag: String)
GET		/category/:category			controllers.Application.category(category: String)
GET		/rating/:rating				controllers.Application.rating(rating: Int)

# JSON
GET 	/routes.js 					controllers.Application.javascriptRoutes
OPTIONS  /json/*all  				controllers.Application.preflight(all)
GET 	/signs3put					controllers.Application.signs3put(s3_object_name: String, s3_object_type: String)

GET 	/json/items/:author 		controllers.Application.itemsByAuthorAsJSON(author: String)
GET 	/json/tags 					controllers.Application.tagsAsJSON
GET 	/json/categories 			controllers.Application.categoriesAsJSON
GET 	/json/authors 				controllers.Application.authorsAsJSON
GET 	/json/relatedurls 			controllers.Application.relatedUrlsAsJSON(from: java.util.Date, to: Option[java.util.Date])
GET 	/json/mostActiveCommenters 	controllers.Application.mostActiveCommenters

# RSS
GET 	/updates/feed 				controllers.Application.updatesAsFeed

# Item Views 
GET		/item/:id					controllers.DetailViewController.view(id: Long)
GET		/item/:id/feed				controllers.DetailViewController.viewAsFeed(id: Long)

# Item API
GET 	/json/item/:id 				controllers.DetailViewController.viewAsJSON(id: Long)
GET 	/json/item/:id/relatedurls	controllers.DetailViewController.relatedUrlsAsJSON(id: Long, limit: Option[Int], offset: Option[Int])

PUT 	/item/:id					controllers.DetailViewController.update(id: Long)
POST 	/item/:id					controllers.DetailViewController.addEntry(id: Long)
DELETE 	/item/:id 					controllers.DetailViewController.delete(id: Long)

POST	/item/:id/tag 				controllers.DetailViewController.addTag(id: Long)
DELETE	/item/:id/tag/:tagid		controllers.DetailViewController.deleteTag(id: Long, tagid: Long)

GET		/entry/:id 					controllers.DetailViewController.getEntry(id: Long)
PUT 	/entry/:id					controllers.DetailViewController.updateEntry(id: Long)
DELETE 	/entry/:id 					controllers.DetailViewController.deleteEntry(id: Long)

# Admin Views 
GET		/admin/import				controllers.Admin.viewImportForm
GET 	/admin/prefs				controllers.Admin.prefs

# Admin API
POST	/admin/import				controllers.Admin.doImport

POST 	/admin/user					controllers.Admin.newUser
PUT 	/admin/user/:id				controllers.Admin.editUser(id: Long)
DELETE 	/admin/user/:id				controllers.Admin.deleteUser(id: Long)

PUT 	/admin/self					controllers.Admin.editUserSelf

POST 	/admin/author				controllers.Admin.newAuthor
PUT 	/admin/author/:id			controllers.Admin.editAuthor(id: Long)
# DELETE 	/admin/author/:id		controllers.Admin.deleteAuthor(id: Long)

PUT		/admin/tag/:id				controllers.Admin.updateTag(id: Long)
DELETE	/admin/tag/:id				controllers.Admin.deleteTag(id: Long)

# Authentication
GET     /login                      controllers.Admin.login
POST    /login                      controllers.Admin.authenticate
GET     /logout                     controllers.Admin.logout

# Load Test
GET /loaderio-a8c18c9612671703651ea5e79d55623e/	controllers.Application.loader_io

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
